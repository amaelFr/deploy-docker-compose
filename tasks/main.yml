---

############################### role exemple
# - hosts:
#     - docker_compose
#   roles:
#     - role: deploy_docker_compose
#       vars:
#         src: ~/documents/docker-stack-test/
#         name: freeipa
#         files:
#           - keycloak/docker-compose.yml
#           - ipa/docker-compose.yml
#         down_stack: False
#         remove_artifcat: True
#         command_before_build:
#         command_on_build:
#         command_build:
#         command_before_start:
#         command_on_start:
#         command_start:
#         command_after_start:
#           - destination: local|machine/containeur name
#             specific_command_environment:
#               envar: overight
#             command: "string"
#           - ls
#         command_down:
#         command_clean:
#         use_runtime_user_socket: true
#         general_environment:
#           DOCKER_HOST: unix:///run/user/280/docker.sock
#         environment:
#           envvar: value
#           envvar1: value

- name: Error if windows OS
  when: ansible_facts['os_family'] == 'Windows'
  fail:
    msg: "Error the following role will only work for non windows system"



- name: Error some vars have wrong type must be mapping {}
  when: general_environment is defined and general_environment is not mapping
  fail:
    msg: "Error some variable enter are not mapping: environment"


- environment: "{{ general_environment_modified }}"
  set_fact:
    general_environment_modified: "{{ general_environment }}"
  when: "'PATH' in general_environment"
- set_fact:
    general_environment_modified: "{{ general_environment|combine( { 'PATH': '/usr/local/bin:/usr/bin:/bin' } )}}"
  when: "'PATH' not in general_environment"


- environment: "{{ general_environment_modified }}"
  become: "{{ true if runtime_user|d(false) else omit }}"
  become_user: "{{ runtime_user|d(omit) }}"
  import_tasks: get_compose_command.yml

# Check and set variables
- import_tasks: vars_check.yml


- environment: "{{ general_environment_modified }}"
  become: "{{ true if runtime_user|d(false) else omit }}"
  become_user: "{{ runtime_user|d(omit) }}"
  block:

    - import_tasks: get_files.yml

    # Command instruction with same environment variables
    - name: Instruction inside same environment
      block:
        - name: Delete last stack
          block:
            - name: "{{ command_down|d(container_command+'-compose -p '+name+' '+files+' down --remove-orphans --volumes #--rmi all') }}"
              # command: "{{ command_down|d(container_command+'-compose -p '+name+' '+files+' down --remove-orphans --volumes') }}"
              command: "{{ command_down|d(container_command+'-compose -p '+name+' '+files+' down --remove-orphans --volumes --rmi all') }}"
              args:
                chdir: ~/container-stack-{{name}}
            - name: "{{ command_clean|d(container_command+'-compose -p '+name+' '+files+' rm -f -v') }}"
              command: "{{ command_clean|d(container_command+'-compose -p '+name+' '+files+' rm -f -v') }}"
              args:
                chdir: ~/container-stack-{{name}}
          when: down_stack|d(True)
        - name: "Command before build stack: {{ item }}"
          command: "{{ item }}"
          args:
            chdir: ~/container-stack-{{name}}
          loop: "{{ command_before_build }}"

        - name: "Build stack: {{ command_on_build|join(' && ') }}"
          command: "{{ command_on_build|join(' && ') }}"
          args:
            chdir: ~/container-stack-{{name}}

        - name: "Command before start stack: {{ item }}"
          command: "{{ item }}"
          args:
            chdir: ~/container-stack-{{name}}
          loop: "{{ command_before_start }}"

        - name: "Start stack: {{ command_on_start|join(' && ') }}"
          command: "{{ command_on_start|join(' && ') }}"
          args:
            chdir: ~/container-stack-{{name}}

        - name: Command after start stack
          include_tasks: command.yml
          loop: "{{ command_after_start }}"

    - name: Clean artifact path
      file:
        state: absent
        path: ~/container-stack-{{name}}
      when: remove_artifact|d(False)
